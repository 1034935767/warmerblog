<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="warmer.star.blog.mapper.MusicMapper">
    <resultMap id="Music" type="warmer.star.blog.model.Music">
        <id column="id" property="id" jdbcType="INTEGER"></id>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
        <result column="singer" property="singer" jdbcType="VARCHAR"/>
        <result column="converUrl" property="converUrl" jdbcType="VARCHAR"/>
        <result column="totalTime" property="totalTime" jdbcType="VARCHAR"/>
        <result column="sortCode" property="sortCode" jdbcType="INTEGER"/>
        <result column="createOn" property="createOn" jdbcType="TIMESTAMP"/>
        <result column="updateOn" property="updateOn" jdbcType="TIMESTAMP"/>

     </resultMap>
    
    <sql id="Base_Column_List">
		a.id,a.title,a.url,a.singer,a.converUrl,a.totalTime,a.sortCode,a.createOn,a.updateOn
	</sql>
	<sql id="Where_Clause" >
	    <where >
	     	<if test="title!= null">
	      		 a.title like concat('%',#{title},'%')
	      	</if>
	      	
	    </where>
	 </sql>
    <!--分页获取文章-->
    <select id="getMusicList" resultMap="Music">
        select 
        <include refid="Base_Column_List" />
        from Music a 
       <include refid="Where_Clause" />
       <choose>
           <when test="sortCode ==0" >
             order by a.updateOn asc 
           </when>
           <when test="sortCode == 1" >
             order by a.updateOn desc 
           </when>
        </choose>
    </select>
    <select id="getById" resultMap="Music">
        select 
        <include refid="Base_Column_List" />
        from Music a
        where a.id= #{musicId} 
    </select>
     <insert id="saveMusic">
		  insert into Music (title,url,singer,converUrl,totalTime,sortCode,createOn,updateOn)
		  values (#{title},#{url},#{singer},#{converUrl},#{totalTime},#{sortCode},#{createOn},#{updateOn})
	</insert>
	<update id="updateMusic">
		  update Music
		  <set>
			  title = #{title},
			  url = #{url},
			  singer = #{singer},
			  converUrl = #{converUrl},
			  totalTime = #{totalTime},
			  sortCode=#{sortCode},
			  updateOn=#{updateOn}
		  </set>
			where id = #{id}
	</update>
	<delete id="deleteMusic">
		  delete from Music where id = #{musicId}
	</delete>
</mapper>
