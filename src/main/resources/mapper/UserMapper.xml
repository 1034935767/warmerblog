<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="warmer.star.blog.mapper.UserMapper">

	<resultMap id="usermodel" type="warmer.star.blog.model.User">
        <id column="id" property="id" jdbcType="INTEGER"></id>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="opendid" property="opendid" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="sourcetype" property="sourcetype" jdbcType="INTEGER"/>
        <result column="expired" property="expired" jdbcType="BOOLEAN"/>
        <result column="locked" property="locked" jdbcType="BOOLEAN"/>
        <result column="credential" property="credential" jdbcType="BOOLEAN"/>
        <result column="enabled" property="enabled" jdbcType="BOOLEAN"/>
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP"/>
        <association property="userItem" column="id" jdbcType="INTEGER"  select="getUserById"/>
        <collection property="userRoles" column="id" javaType="ArrayList"   select="warmer.star.blog.mapper.UserRoleMapper.getUserRole"></collection>
    </resultMap>
    <resultMap id="userInfoModel" type="warmer.star.blog.model.UserInfo">
        <id column="id" property="id" jdbcType="INTEGER"></id>
        <result column="userId" property="userId" jdbcType="INTEGER"></result>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="avatar" property="avatar" jdbcType="VARCHAR"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="signature" property="signature" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="wechatQrCode" property="wechatQrCode" jdbcType="VARCHAR"/>
        <result column="qq" property="qq" jdbcType="VARCHAR"/>
        <result column="wechat" property="wechat" jdbcType="VARCHAR"/>
        <result column="workExperience" property="workExperience" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Where_Clause" >
        <where >
            1=1
            <if test="name!= null and name!= ''">
                and a.username like concat('%',#{name},'%')
            </if>
        </where>
    </sql>
    <select id="getUserList" resultMap="usermodel">
        select a.* from user a
        <include refid="Where_Clause" />
        <choose>
            <when test="sort ==0" >
                order by a.createTime asc
            </when>
            <when test="sort == 1" >
                order by a.createTime desc
            </when>
            <otherwise>
                order by a.createTime desc
            </otherwise>
        </choose>
    </select>
    <!--通过username获取user对象-->
    <select id="getUser" parameterType="String" resultMap="usermodel">
        SELECT * from user where username = #{username}
    </select>
    <select id="getUserById" parameterType="Integer" resultMap="userInfoModel">
        SELECT * from userinfo where userid = #{id}
    </select>
    <select id="getByOpenId" parameterType="String" resultMap="usermodel">
        SELECT * from user where OpenId = #{openId}
    </select>
	<select id="getUserInfo" parameterType="String" resultMap="userInfoModel">
        SELECT * from userinfo where username = #{username}
    </select>
    <select id="allUser" resultMap="usermodel">
        select * from user
    </select>
    <insert id="addUser" parameterType="warmer.star.blog.model.User" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        <selectKey resultType="int" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID()  as id
        </selectKey>
        insert into user (username,password,createTime,openid,sourcetype) values (#{username},#{password},#{createTime},#{openid},#{sourcetype})
    </insert>

    <update id="updateAvatar">
        update userinfo set avatar = #{url} where username = #{username}
    </update>


    <update id="updatePassword">
        update user set password = #{password} where username = #{username}
    </update>
    <insert id="addUserInfo">
        insert userinfo (userId,username,nickname,avatar,phone,email,address,wechat,wechatQrCode,qq,workExperience) values (#{userId},#{username},#{nickname},#{avatar},#{phone},#{email},#{address},#{wechat},#{wechatQrCode},#{qq},#{workExperience})
     </insert>
    <update id="updateUserInfo">
        update userinfo set nickname = #{nickname},phone = #{phone},email = #{email},signature = #{signature},
        address = #{address},wechat = #{wechat},wechatQrCode = #{wechatQrCode},qq = #{qq} ,workExperience = #{workExperience} where userId = #{userId}
    </update>
</mapper>
